{
  "version": 3,
  "sources": ["../lib/sum.js", "../lib/order.js", "../lib/is_missing.js", "../lib/validate.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Computes the sum of elements of an numeric array.\n*\n* @private\n* @param {NumericArray} arr - input array\n* @returns {number} sum\n*\n* @example\n* var arr = [ 2.0, 6.0, 10.0 ];\n* var out = sum( arr );\n* // returns 18.0\n*/\nfunction sum( arr ) {\n\tvar len;\n\tvar out;\n\tvar i;\n\n\tlen = arr.length;\n\tout = 0.0;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout += arr[ i ];\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = sum;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Returns a comparison result. If `-1`, `a` comes before `b`. If `1`, `b` comes before `a`. If `0`, the order stays the same.\n*\n* @private\n* @param {number} a - first number\n* @param {number} b - second number\n* @returns {boolean} comparison result\n*/\nfunction compareFunction( a, b ) {\n\tif ( a < b ) {\n\t\treturn -1;\n\t}\n\tif ( a > b ) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\n\n// MAIN //\n\n/**\n* Returns a permutation which rearranges input array.\n*\n* @private\n* @param {ArrayLike} x - input array-like object\n* @returns {Array} permutation array\n*/\nfunction order( x ) {\n\tvar arr;\n\tvar i;\n\n\tarr = new Array( x.length );\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\tarr[ i ] = i;\n\t}\n\treturn arr.sort( compare );\n\n\t/**\n\t* Compare the elements of the input array.\n\t*\n\t* @private\n\t* @param {number} a - first number\n\t* @param {number} b - second number\n\t* @returns {boolean} comparison result\n\t*/\n\tfunction compare( a, b ) {\n\t\treturn compareFunction( x[a], x[b] );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = order;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\nvar contains = require( '@stdlib/assert-contains' );\n\n\n// MAIN //\n\n/**\n* Computes for each array element whether it is a missing value.\n*\n* @private\n* @param {Array} arr - input array\n* @param {Array} encoding - array whose elements encode missing values\n* @returns {BooleanArray} output array\n*/\nfunction isMissing( arr, encoding ) {\n\tvar len;\n\tvar out;\n\tvar i;\n\n\tlen = arr.length;\n\tout = new Array( len );\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout[ i ] = contains( encoding, arr[ i ] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isMissing;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar contains = require( '@stdlib/assert-contains' );\nvar isArray = require( '@stdlib/assert-is-array' );\nvar isObject = require( '@stdlib/assert-is-object' );\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar format = require( '@stdlib/string-format' );\n\n\n// VARIABLES //\n\nvar METHODS = [ 'min', 'max', 'average', 'dense', 'ordinal' ];\nvar MISSING = [ 'last', 'first', 'remove' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for validated options\n* @param {Object} options - function options\n* @param {string} [options.method] - method determining how ties are treated\n* @param {string} [opts.missing] - determines where missing values go (`first`,`last`, or `remove`)\n* @param {Array} [opts.encoding] - array of values encoding missing values\n* @returns {(null|Error)} null or an error\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'encoding' ) ) {\n\t\topts.encoding = options.encoding;\n\t\tif ( !isArray( opts.encoding ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an array. Option: `%s`.', 'encoding', opts.encoding ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'method' ) ) {\n\t\topts.method = options.method;\n\t\tif ( !isString( opts.method ) || !contains( METHODS, opts.method ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'method', METHODS.join( '\", \"' ), opts.method ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'missing' ) ) {\n\t\topts.missing = options.missing;\n\t\tif ( !isString( opts.missing ) || !contains( MISSING, opts.missing ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'missing', MISSING.join( '\", \"' ), opts.missing ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isCollection = require( '@stdlib/assert-is-collection' );\nvar contains = require( '@stdlib/assert-contains' );\nvar format = require( '@stdlib/string-format' );\nvar sum = require( './sum.js' );\nvar order = require( './order.js' );\nvar isMissing = require( './is_missing.js' );\nvar validate = require( './validate.js' );\n\n\n// MAIN //\n\n/**\n* Computes the sample ranks for the values of an array-like object.\n*\n* @param {Collection} x - data array\n* @param {Object} [options] - options object\n* @param {string} [options.method='average'] - method name determining how ties are treated\n* @param {string} [options.missing='last'] - determines where missing values go (`first`,`last`, or `remove`)\n* @param {Array} [options.encoding=[null,NaN]] - array of values encoding missing values\n* @throws {TypeError} first argument has to be an array-like object\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Array} array containing the computed ranks for the elements of x\n*\n* @example\n* var arr = [ 1.1, 2.0, 3.5, 0.0, 2.4 ];\n* var out = ranks( arr );\n* // returns [ 2, 3, 5, 1, 4 ]\n*\n* @example\n* // Ties are averaged:\n* arr = [ 2, 2, 1, 4, 3 ];\n* out = ranks( arr );\n* // returns [ 2.5, 2.5, 1, 5, 4 ]\n*\n* @example\n* // Missing values are placed last:\n* arr = [ null, 2, 2, 1, 4, 3, NaN, NaN ];\n* out = ranks( arr );\n* // returns [ 6, 2.5, 2.5, 1, 5, 4, 7 ,8 ]\n*/\nfunction ranks( x, options ) {\n\tvar missingIndices;\n\tvar noDuplicates;\n\tvar countMissing;\n\tvar totalNoTies;\n\tvar finalRanks;\n\tvar encoding;\n\tvar iPlusOne;\n\tvar ordered;\n\tvar missing;\n\tvar tieRank;\n\tvar method;\n\tvar ranks;\n\tvar opts;\n\tvar xnew;\n\tvar err;\n\tvar n;\n\tvar i;\n\tvar j;\n\n\tif ( !isCollection( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', x ) );\n\t}\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tmethod = opts.method || 'average';\n\tencoding = opts.encoding || [ null, NaN ];\n\tmissing = opts.missing || 'last';\n\n\tn = x.length;\n\txnew = [];\n\tfor ( i = 0; i < n; i++ ) {\n\t\tif ( !contains( encoding, x[ i ] ) ) {\n\t\t\txnew.push( x[ i ] );\n\t\t}\n\t}\n\tmissingIndices = isMissing( x, encoding );\n\tn = xnew.length;\n\ttotalNoTies = 0;\n\tranks = new Array( n );\n\tordered = order( xnew );\n\n\tif ( method === 'ordinal' ) {\n\t\tfor ( i = 0; i < n; i++ ) {\n\t\t\tranks[ ordered[ i ] ] = i + 1;\n\t\t}\n\t} else {\n\t\tnoDuplicates = 0;\n\t\tfor ( i = 0; i < n; i++ ) {\n\t\t\tiPlusOne = i + 1;\n\t\t\tif (\n\t\t\t\t( i === n - 1 ) ||\n\t\t\t\t( xnew[ ordered[i] ] !== xnew[ ordered[ iPlusOne ] ] )\n\t\t\t) {\n\t\t\t\tswitch ( method ) {\n\t\t\t\tcase 'min':\n\t\t\t\t\ttieRank = iPlusOne - noDuplicates;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'max':\n\t\t\t\t\ttieRank = iPlusOne;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'dense':\n\t\t\t\t\ttieRank = iPlusOne - noDuplicates - totalNoTies;\n\t\t\t\t\ttotalNoTies += noDuplicates;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'average':\n\t\t\t\tdefault:\n\t\t\t\t\ttieRank = iPlusOne - ( 0.5 * noDuplicates );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tfor ( j = i - noDuplicates; j < iPlusOne; j++ ) {\n\t\t\t\t\tranks[ ordered[ j ] ] = tieRank;\n\t\t\t\t}\n\t\t\t\tnoDuplicates = 0;\n\t\t\t} else {\n\t\t\t\tnoDuplicates += 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( missing === 'first' ) {\n\t\tcountMissing = sum( missingIndices );\n\t\tj = 1;\n\t\tfinalRanks = new Array( missingIndices.length );\n\t\tfor ( i = 0; i < missingIndices.length; i++ ) {\n\t\t\tif ( missingIndices[ i ] ) {\n\t\t\t\tfinalRanks[ i ] = j;\n\t\t\t\tj += 1;\n\t\t\t} else {\n\t\t\t\tfinalRanks[ i ] = ranks.shift() + countMissing;\n\t\t\t}\n\t\t}\n\t\treturn finalRanks;\n\t}\n\tif ( missing === 'last' ) {\n\t\tfinalRanks = new Array( missingIndices.length );\n\t\tfor ( i = 0; i < missingIndices.length; i++ ) {\n\t\t\tif ( missingIndices[ i ] ) {\n\t\t\t\tfinalRanks[ i ] = i + ranks.length + 1;\n\t\t\t} else {\n\t\t\t\tfinalRanks[ i ] = ranks.shift();\n\t\t\t}\n\t\t}\n\t\treturn finalRanks;\n\t}\n\t// Case: missing = 'remove'\n\treturn ranks;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ranks;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute ranks for the values of an array-like object.\n*\n* @module @stdlib/stats-ranks\n*\n* @example\n* var ranks = require( '@stdlib/stats-ranks' );\n*\n* var arr = [ 1.1, 2.0, 3.5, 0.0, 2.4 ];\n* var out = ranks( arr );\n* // returns [ 2, 3, 5, 1, 4 ]\n*\n* // Ties are averaged:\n* arr = [ 2, 2, 1, 4, 3 ];\n* out = ranks ( arr );\n* // returns [ 2.5, 2.5, 1, 5, 4 ];\n*\n* // Missing values are placed last:\n* arr = [ null, 2, 2, 1, 4, 3, NaN, NaN ];\n* out = ranks( arr );\n* // returns [ 6, 2.5, 2.5, 1, 5, 4, 7 ,8 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "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",
  "names": ["require_sum", "__commonJSMin", "exports", "module", "sum", "arr", "len", "out", "i", "require_order", "__commonJSMin", "exports", "module", "compareFunction", "a", "b", "order", "x", "arr", "i", "compare", "require_is_missing", "__commonJSMin", "exports", "module", "contains", "isMissing", "arr", "encoding", "len", "out", "i", "require_validate", "__commonJSMin", "exports", "module", "contains", "isArray", "isObject", "isString", "hasOwnProp", "format", "METHODS", "MISSING", "validate", "opts", "options", "require_main", "__commonJSMin", "exports", "module", "isCollection", "contains", "format", "sum", "order", "isMissing", "validate", "ranks", "x", "options", "missingIndices", "noDuplicates", "countMissing", "totalNoTies", "finalRanks", "encoding", "iPlusOne", "ordered", "missing", "tieRank", "method", "opts", "xnew", "err", "n", "i", "j", "main"]
}
