{"version":3,"file":"index.mjs","sources":["../lib/validate.js","../lib/main.js","../lib/is_missing.js","../lib/order.js","../lib/sum.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport contains from '@stdlib/assert-contains';\nimport isArray from '@stdlib/assert-is-array';\nimport isObject from '@stdlib/assert-is-object';\nimport { isPrimitive as isString } from '@stdlib/assert-is-string';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// VARIABLES //\n\nvar METHODS = [ 'min', 'max', 'average', 'dense', 'ordinal' ];\nvar MISSING = [ 'last', 'first', 'remove' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for validated options\n* @param {Object} options - function options\n* @param {string} [options.method] - method determining how ties are treated\n* @param {string} [opts.missing] - determines where missing values go (`first`,`last`, or `remove`)\n* @param {Array} [opts.encoding] - array of values encoding missing values\n* @returns {(null|Error)} null or an error\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( '1Lp2V', options ) );\n\t}\n\tif ( hasOwnProp( options, 'encoding' ) ) {\n\t\topts.encoding = options.encoding;\n\t\tif ( !isArray( opts.encoding ) ) {\n\t\t\treturn new TypeError( format( '1Lp8Z', 'encoding', opts.encoding ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'method' ) ) {\n\t\topts.method = options.method;\n\t\tif ( !isString( opts.method ) || !contains( METHODS, opts.method ) ) {\n\t\t\treturn new TypeError( format( '1Lp4S', 'method', METHODS.join( '\", \"' ), opts.method ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'missing' ) ) {\n\t\topts.missing = options.missing;\n\t\tif ( !isString( opts.missing ) || !contains( MISSING, opts.missing ) ) {\n\t\t\treturn new TypeError( format( '1Lp4S', 'missing', MISSING.join( '\", \"' ), opts.missing ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert-is-collection';\nimport contains from '@stdlib/assert-contains';\nimport format from '@stdlib/error-tools-fmtprodmsg';\nimport sum from './sum.js';\nimport order from './order.js';\nimport isMissing from './is_missing.js';\nimport validate from './validate.js';\n\n\n// MAIN //\n\n/**\n* Computes the sample ranks for the values of an array-like object.\n*\n* @param {Collection} x - data array\n* @param {Object} [options] - options object\n* @param {string} [options.method='average'] - method name determining how ties are treated\n* @param {string} [options.missing='last'] - determines where missing values go (`first`,`last`, or `remove`)\n* @param {Array} [options.encoding=[null,NaN]] - array of values encoding missing values\n* @throws {TypeError} first argument has to be an array-like object\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Array} array containing the computed ranks for the elements of x\n*\n* @example\n* var arr = [ 1.1, 2.0, 3.5, 0.0, 2.4 ];\n* var out = ranks( arr );\n* // returns [ 2, 3, 5, 1, 4 ]\n*\n* @example\n* // Ties are averaged:\n* arr = [ 2, 2, 1, 4, 3 ];\n* out = ranks( arr );\n* // returns [ 2.5, 2.5, 1, 5, 4 ]\n*\n* @example\n* // Missing values are placed last:\n* arr = [ null, 2, 2, 1, 4, 3, NaN, NaN ];\n* out = ranks( arr );\n* // returns [ 6, 2.5, 2.5, 1, 5, 4, 7 ,8 ]\n*/\nfunction ranks( x, options ) {\n\tvar missingIndices;\n\tvar noDuplicates;\n\tvar countMissing;\n\tvar totalNoTies;\n\tvar finalRanks;\n\tvar encoding;\n\tvar iPlusOne;\n\tvar ordered;\n\tvar missing;\n\tvar tieRank;\n\tvar method;\n\tvar ranks;\n\tvar opts;\n\tvar xnew;\n\tvar err;\n\tvar n;\n\tvar i;\n\tvar j;\n\n\tif ( !isCollection( x ) ) {\n\t\tthrow new TypeError( format( '1Lp2O', x ) );\n\t}\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tmethod = opts.method || 'average';\n\tencoding = opts.encoding || [ null, NaN ];\n\tmissing = opts.missing || 'last';\n\n\tn = x.length;\n\txnew = [];\n\tfor ( i = 0; i < n; i++ ) {\n\t\tif ( !contains( encoding, x[ i ] ) ) {\n\t\t\txnew.push( x[ i ] );\n\t\t}\n\t}\n\tmissingIndices = isMissing( x, encoding );\n\tn = xnew.length;\n\ttotalNoTies = 0;\n\tranks = new Array( n );\n\tordered = order( xnew );\n\n\tif ( method === 'ordinal' ) {\n\t\tfor ( i = 0; i < n; i++ ) {\n\t\t\tranks[ ordered[ i ] ] = i + 1;\n\t\t}\n\t} else {\n\t\tnoDuplicates = 0;\n\t\tfor ( i = 0; i < n; i++ ) {\n\t\t\tiPlusOne = i + 1;\n\t\t\tif (\n\t\t\t\t( i === n - 1 ) ||\n\t\t\t\t( xnew[ ordered[i] ] !== xnew[ ordered[ iPlusOne ] ] )\n\t\t\t) {\n\t\t\t\tswitch ( method ) {\n\t\t\t\tcase 'min':\n\t\t\t\t\ttieRank = iPlusOne - noDuplicates;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'max':\n\t\t\t\t\ttieRank = iPlusOne;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'dense':\n\t\t\t\t\ttieRank = iPlusOne - noDuplicates - totalNoTies;\n\t\t\t\t\ttotalNoTies += noDuplicates;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'average':\n\t\t\t\tdefault:\n\t\t\t\t\ttieRank = iPlusOne - ( 0.5 * noDuplicates );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tfor ( j = i - noDuplicates; j < iPlusOne; j++ ) {\n\t\t\t\t\tranks[ ordered[ j ] ] = tieRank;\n\t\t\t\t}\n\t\t\t\tnoDuplicates = 0;\n\t\t\t} else {\n\t\t\t\tnoDuplicates += 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( missing === 'first' ) {\n\t\tcountMissing = sum( missingIndices );\n\t\tj = 1;\n\t\tfinalRanks = new Array( missingIndices.length );\n\t\tfor ( i = 0; i < missingIndices.length; i++ ) {\n\t\t\tif ( missingIndices[ i ] ) {\n\t\t\t\tfinalRanks[ i ] = j;\n\t\t\t\tj += 1;\n\t\t\t} else {\n\t\t\t\tfinalRanks[ i ] = ranks.shift() + countMissing;\n\t\t\t}\n\t\t}\n\t\treturn finalRanks;\n\t}\n\tif ( missing === 'last' ) {\n\t\tfinalRanks = new Array( missingIndices.length );\n\t\tfor ( i = 0; i < missingIndices.length; i++ ) {\n\t\t\tif ( missingIndices[ i ] ) {\n\t\t\t\tfinalRanks[ i ] = i + ranks.length + 1;\n\t\t\t} else {\n\t\t\t\tfinalRanks[ i ] = ranks.shift();\n\t\t\t}\n\t\t}\n\t\treturn finalRanks;\n\t}\n\t// Case: missing = 'remove'\n\treturn ranks;\n}\n\n\n// EXPORTS //\n\nexport default ranks;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\nimport contains from '@stdlib/assert-contains';\n\n\n// MAIN //\n\n/**\n* Computes for each array element whether it is a missing value.\n*\n* @private\n* @param {Array} arr - input array\n* @param {Array} encoding - array whose elements encode missing values\n* @returns {BooleanArray} output array\n*/\nfunction isMissing( arr, encoding ) {\n\tvar len;\n\tvar out;\n\tvar i;\n\n\tlen = arr.length;\n\tout = new Array( len );\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout[ i ] = contains( encoding, arr[ i ] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default isMissing;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Returns a comparison result. If `-1`, `a` comes before `b`. If `1`, `b` comes before `a`. If `0`, the order stays the same.\n*\n* @private\n* @param {number} a - first number\n* @param {number} b - second number\n* @returns {boolean} comparison result\n*/\nfunction compareFunction( a, b ) {\n\tif ( a < b ) {\n\t\treturn -1;\n\t}\n\tif ( a > b ) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\n\n// MAIN //\n\n/**\n* Returns a permutation which rearranges input array.\n*\n* @private\n* @param {ArrayLike} x - input array-like object\n* @returns {Array} permutation array\n*/\nfunction order( x ) {\n\tvar arr;\n\tvar i;\n\n\tarr = new Array( x.length );\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\tarr[ i ] = i;\n\t}\n\treturn arr.sort( compare );\n\n\t/**\n\t* Compare the elements of the input array.\n\t*\n\t* @private\n\t* @param {number} a - first number\n\t* @param {number} b - second number\n\t* @returns {boolean} comparison result\n\t*/\n\tfunction compare( a, b ) {\n\t\treturn compareFunction( x[a], x[b] );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default order;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Computes the sum of elements of an numeric array.\n*\n* @private\n* @param {NumericArray} arr - input array\n* @returns {number} sum\n*\n* @example\n* var arr = [ 2.0, 6.0, 10.0 ];\n* var out = sum( arr );\n* // returns 18.0\n*/\nfunction sum( arr ) {\n\tvar len;\n\tvar out;\n\tvar i;\n\n\tlen = arr.length;\n\tout = 0.0;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout += arr[ i ];\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default sum;\n"],"names":["METHODS","MISSING","ranks","x","options","missingIndices","noDuplicates","countMissing","totalNoTies","finalRanks","encoding","iPlusOne","ordered","missing","tieRank","method","opts","xnew","err","n","i","j","isCollection","TypeError","format","arguments","length","isObject","hasOwnProp","isArray","isString","contains","join","validate","NaN","push","arr","len","out","Array","isMissing","sort","a","b","compareFunction","order","sum","shift"],"mappings":"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"}